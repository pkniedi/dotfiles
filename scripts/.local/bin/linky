#! /usr/bin/env zsh

# Use fzf to search in a list of aliases for urls.

FILE=$HOME/.linkylinks

usage() {
echo "Usage: 
remove:		linky (r)emove
add:		linky add aliases \"alternative aliases/description\"
open:		linky 
eval:	    repl
"

exit 1
}

if [ ! -f $FILE ];then
    echo  "example	www.example.com" >> $HOME/.linkylinks
fi

function main () {
 url=$(column -t -s '	' <(cat $FILE) | fzf --cycle --color='hl:#E12656,fg:#D9D9D9,header:#719872,fg+:#D9D9D9' \
                                             --color='pointer:#E12656,marker:#E17854,prompt:#66BEDE,hl+:#90BC76' \
                                             | sed -e 's/^.*\(http.*\)/\1/') \

if  ! xdg-open &>/dev/null $url;then
     exit 1
fi
return 0
}

function goto_ws_1(){
i3-msg &>/dev/null '[instance="^linky-popup$"] scratchpad show'
i3-msg &>/dev/null workspace number 1
}


# TODO: add feature to check for too long lines
case $# in
    0) 
        main
        i3-msg &>/dev/null workspace number 1
        exit 0
        ;;
    1)
        if [[ $1 == "r" || $1 == "rem" ]]; then
            target=$(column -t -s '	' <(cat $FILE) | fzf)
            # NOTE: need to do this because of the wrong output of the column command
        # FIXME: does not work if for other protocols
            new_target=$(echo $target | sed 's/^.*\(http.*\)/\1/')
            { sed &>/dev/null "\\\"$target\"d" $FILE  > $FILE.bck && mv $FILE.bck $FILE && echo Removed \"$target\" } || echo failed
            exit 0
        elif [[ $1 == "eval" ]]; then
            while true; do
                if linky; then
                    i3-msg &>/dev/null '[instance="^linky-popup$"] scratchpad show'
                    i3-msg &>/dev/null workspace number 1
                else
                    i3-msg &>/dev/null '[instance="^linky-popup$"] scratchpad show'
                fi
            done
        else
            usage
            exit 1
        fi
        
        ;;

    3)
        
        INPUT_ALLLINKS="$2, $3	$(xclip -out -selection clipboard)"
        echo $INPUT_ALLLINKS >> $FILE
        exit 0
        ;;
    *)
        usage
        exit 1
        ;;
esac
